{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} (p : α → Prop) [_inst_1 : decidable_pred p] (l : list α),\n  partition p l = (filter p l, filter (not ∘ p) l)","depth":1,"fuel_exhausted":false,"global_timeout":false,"num_queries":2,"states":[],"success":false,"tactics":[],"task_id":"list.partition_eq_filter_filter"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} {p : α → Prop} [h : decidable_pred p] (l₁ l₂ : list α),\n  filter p (l₁ ++ l₂) = filter p l₁ ++ filter p l₂","depth":1,"fuel_exhausted":false,"global_timeout":false,"num_queries":2,"states":[],"success":false,"tactics":[],"task_id":"list.filter_append"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} {p : α → Prop} [h : decidable_pred p] (l : list α), filter p l <+ l","depth":1,"fuel_exhausted":false,"global_timeout":false,"num_queries":2,"states":[],"success":false,"tactics":[],"task_id":"list.filter_sublist"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} (t : list α), t ++ nil = t","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.append_nil"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} (s t u : list α), s ++ t ++ u = s ++ (t ++ u)","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.append_assoc"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} (s t : list α), (s ++ t).length = s.length + t.length","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.length_append"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} (a : α) (n : ℕ), (repeat a n).length = n","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.length_repeat"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} (l : list α), l.tail.length = l.length - 1","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.length_tail"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} {β : Type v} (f : α → β) (l₁ l₂ : list α), map f (l₁ ++ l₂) = map f l₁ ++ map f l₂","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.map_append"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} (l : list α), map id l = l","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.map_id"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} {β : Type v} {γ : Type w} (g : β → γ) (f : α → β) (l : list α),\n  map g (map f l) = map (g ∘ f) l","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.map_map"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} {β : Type v} (f : α → β) (l : list α), (map f l).length = l.length","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.length_map"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} {β : Type v} (f : α → list β), nil.bind f = nil","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.nil_bind"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} {β : Type v} (x : α) (xs : list α) (f : α → list β), (x :: xs).bind f = f x ++ xs.bind f","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.cons_bind"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u} {β : Type v} (xs ys : list α) (f : α → list β), (xs ++ ys).bind f = xs.bind f ++ ys.bind f","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.append_bind"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {α : Type u_1} (lt : α → α → bool), qsort lt nil = nil","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"list.qsort_nil"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (b : bool) (n : ℕ), (bit b n).bodd = b","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.bodd_bit"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (b : bool) (m : ℕ) {n k : ℕ}, k ≤ n → shiftl' b m (n - k) = (shiftl' b m n).shiftr k","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.shiftl'_sub"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (m : ℕ) (b : bool) (n : ℕ), (bit b n).test_bit m.succ = n.test_bit m","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.test_bit_succ"}
{"all_failed_count":2,"api_failure_count":0,"decl_goal":"∀ {f : bool → bool → bool},\n  f ff ff = ff →\n  (binary_rec (cond (f tt ff) (bit ff 0) 0)\n       (λ (b : bool) (n : ℕ) (_x : (λ (_x : ℕ), ℕ) n), bit (f ff b) (cond (f ff tt) n 0)) =\n     λ (n : ℕ), cond (f ff tt) n 0)","depth":2,"fuel_exhausted":false,"global_timeout":false,"num_queries":4,"states":[],"success":false,"tactics":[],"task_id":"nat.bitwise_bit_aux"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (f : bool → bool → bool) (n : ℕ), bitwise f 0 n = cond (f ff tt) n 0","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.bitwise_zero_left"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (f : bool → bool → bool), f ff ff = ff → ∀ (m : ℕ), bitwise f m 0 = cond (f tt ff) m 0","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.bitwise_zero_right"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (f : bool → bool → bool), bitwise f 0 0 = 0","depth":1,"fuel_exhausted":false,"global_timeout":false,"num_queries":2,"states":[],"success":false,"tactics":[],"task_id":"nat.bitwise_zero"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {f : bool → bool → bool},\n  f ff ff = ff →\n  ∀ (a : bool) (m : ℕ) (b : bool) (n : ℕ), bitwise f (bit a m) (bit b n) = bit (f a b) (bitwise f m n)","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.bitwise_bit"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ {f : bool → bool → bool}, f ff ff = ff → bitwise (function.swap f) = function.swap (bitwise f)","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.bitwise_swap"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (n : ℕ), n.succ.bodd = bnot n.bodd","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.bodd_succ"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (m n : ℕ), (m * n).bodd = m.bodd && n.bodd","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.bodd_mul"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (n : ℕ), n % 2 = cond n.bodd 1 0","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.mod_two_of_bodd"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (n : ℕ), cond n.bodd 1 0 + 2 * n.div2 = n","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.bodd_add_div2"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (b : bool) (n : ℕ), bit b n = 2 * n + cond b 1 0","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.bit_val"}
{"all_failed_count":1,"api_failure_count":0,"decl_goal":"∀ (x : ℕ), 0.gcd x = x","depth":0,"fuel_exhausted":false,"global_timeout":false,"num_queries":1,"states":[],"success":false,"tactics":[],"task_id":"nat.gcd_zero_left"}
